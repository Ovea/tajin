* fichiers lin.t.js, mocking.t.js

* faire sauter config json et tajin client
* faire sauter onready
* trouver comment avec juste un init.js filtre avec maven ou autre

* dossier .tajine/lib dans le home du user pour caching. Cache true false ou folder.

* au lieu de event.getAll et event.get faire event.on('') pour tous les cas et gerer une liste d events

* config idem que virtual resources (file, web, url)

----

Tajin Event

    * support event server-side & client transparent a travers comnetd ou autre
    * batchs sur un event

Tajin JS

    * cors
    * crypto

Tajin Watcher

    * gestion des ressources
        * supports:
            * sass, less, css => css
            * js, coffescript => js
        * voir: http://code.google.com/p/wro4j/

Tajin Tools

    * script pour verifier l i18n rel localize vs bundles configures dans tajin.json

DynamicForm

    * https://github.com/thedersen/backbone.validation
    * https://github.com/powmedia/backbone-forms

Security

    * shiro integration
    * rememberme settings
    * anti-replay
    * owasp
    * CSRF (https://github.com/esheri3/OWASP-CSRFGuard)
    * Checking The Origin Header (https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)_Prevention_Cheat_Sheet)
    * https://nealpoole.com/blog/2010/11/preventing-csrf-attacks-with-ajax-and-http-headers/
    * https://www.owasp.org/images/0/08/OWASP_SCP_Quick_Reference_Guide_v2.pdf
